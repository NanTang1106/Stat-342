main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='orange4', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='orange1', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='#a1d76a', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='#a1d76a', probability=T,
main='Histogram of M100 with Exponential(100)')
lines(x=x_value, y=exp50, lwd=3, col='#e9a3c9')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(100)',
col='#e9a3c9', lty=1:2, cex=0.8)
hist(minunif_eva, breaks=50, col='#b2df8a', probability=T,
main='Histogram of M100 with Exponential(100)')
lines(x=x_value, y=exp50, lwd=3, col='#1f78b4')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(100)',
col='#e9a3c9', lty=1:2, cex=0.8)
im_size <- 10000
sample_size <- 50
minunif_eva <- rep(NA, sim_size)
for (i in 1:sim_size) {
sample <- runif(sample_size)
minunif_eva[i] <- min(sample)
}
mean(minunif_eva)
sd(minunif_eva)
# question 2 b
x_value <- seq(from=0, to=max(minunif_eva), by=0.001)
exp50 <- dexp(x_value, 50)
hist(minunif_eva, breaks=50, col='skyblue', probability=T,
main='Histogram of M50 with Exponential(50)', xlab='M50')
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
sample_size <- 100
minunif_eva <- rep(NA, sim_size)
for (i in 1:sim_size) {
sample <- runif(sample_size)
minunif_eva[i] <- min(sample)
}
x_value <- seq(from=0, to=max(minunif_eva), by=0.001)
exp50 <- dexp(x_value, 100)
hist(minunif_eva, breaks=50, col='#b2df8a', probability=T,
main='Histogram of M100 with Exponential(100)', xlab='M100')
lines(x=x_value, y=exp50, lwd=3, col='#1f78b4')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(100)',
col='#1f78b4', lty=1:2, cex=0.8)
4/1000
4/100
sqrt(0.04/100)
qnorm(0.95)
po4_dt <- rpois(100, 4)
hist(po4_dt, break=30)
hist(po4_dt, breaks=30)
hist(po4_dt, breaks=20)
hist(po4_dt)
hist(po4_dt, break=15)
hist(po4_dt, breaks=15)
hist(po4_dt, breaks=20)
hist(po4_dt, main='Histogram of Poisson(4)', Probability=T, xlab='X Value', ylab='Density')
hist(po4_dt, main='Histogram of Poisson(4)', probability=T, xlab='X Value', ylab='Density')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density', col='orange')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density', col='limegreen')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density', col='lime')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density', col='orange')
lambda_est <- mean(po4_dt)
lambda_est
sim_size <- 10000
sim_result <- rep(NA, sim_size)
for (i in 1:sim_size) {
po_dt <- rpois(100, 4)
sim_result[i] <- mean(po_dt)
}
hist(sim_result, probability=T)
hist(sim_result, probability = T)
hist(sim_result, probability = T, breaks=30)
hist(sim_result, probability = T, breaks=30, col='skyblue')
hist(sim_result, probability = T, breaks=30, col='violent')
hist(sim_result, probability = T, breaks=30, col='violet')
hist(sim_result, probability = T, breaks=30, col='limegreen')
hist(sim_result, probability = T, breaks=30, col='olivegreen')
hist(sim_result, probability = T, breaks=30, col='olive')
hist(sim_result, probability = T, breaks=30, col='oliver')
hist(sim_result, probability = T, breaks=30, col='olivergreen')
hist(sim_result, probability = T, breaks=30, col='darkolivegreen1',
main='Histogram of Monte Carlo Poisson(4)', xlab='MLE value', ylab='Density')
?seq
norm_base <- seq(3.0, 5.0, 0.01)
norm_dt <- dnorm(norm_base, 4, 4)
lines(norm_base, norm_dt)
norm_dt <- dnorm(norm_base, 4, 0.2)
lines(norm_base, norm_dt)
hist(sim_result, probability = T, breaks=30, col='darkolivegreen1',
main='Histogram of Monte Carlo Poisson(4)', xlab='MLE value', ylab='Density')
lines(norm_base, norm_dt, lwd=2, col='firebrick1')
lines(norm_base, norm_dt, lwd=2, col='deepskyblue')
-0.5/0.2
pnorm(2.5)
pnorm(2.5) - pnorm(-2.5)
pnorm(4.5, 4, 0.2) - pnorm(3.5, 4, 0.2)
data(quakes)
quakes
head(quakes)
# Q2-a
data(quakes)
hist(quakes$stations)
hist(quakes$stations, breaks=20, probability=T)
hist(quakes$stations, breaks15, probability=T)
hist(quakes$stations, breaks=15, probability=T)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='skyblue')
lambda_est <- mean(quakes$stations)
lambda_est
exp_dt <- dexp(exp_base, lambda_est)
exp_base <- seq(10, 140, 0.01)
exp_dt <- dexp(exp_base, lambda_est)
lines(exp_base, exp_dt)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='skyblue')
lines(exp_base, exp_dt)
head(exp_dt)
lambda_est <- 1/mean(quakes$stations)
lambda_est
exp_base <- seq(10, 140, 0.01)
exp_dt <- dexp(exp_base, lambda_est)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='skyblue')
lines(exp_base, exp_dt)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='coral1')
lines(exp_base, exp_dt, col='cornsilk1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='chartreuse')
lines(exp_base, exp_dt, col='cadetblue1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='brown1')
lines(exp_base, exp_dt, col='cadetblue1')
lines(exp_base, exp_dt, lwd=2, col='darkgoldenrod1')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='coral')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
?legend
legend(legend=('Exp(0.02992)'), col='cyan2')
legend('topleft', legend=('Exp(0.02992)'), col='cyan2')
legend('topright', legend=('Exp(0.02992)'), col='cyan2', lwd=2)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan4')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan3')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
lines(exp_base, exp_dt, lwd=2, col='chocolate2')
lines(exp_base, exp_dt, lwd=2, col='chocolate4')
lines(exp_base, exp_dt, lwd=2, col='chocolate3')
lines(exp_base, exp_dt, lwd=2, col='chocolate2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=2)
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3)
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
lines(exp_base, exp_dt, lwd=2, col='cadetblue1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cadetblue1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
# question2-c
plot(x=quakes$stations, y=quakes$mag)
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19)
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, col='gray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='darkgray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='#E69F00')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='56B4E9')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='#56B4E9')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50', xlab='Station',
ylab='Magnitude', main-'Scatter Plot of Mag VS Station')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50', xlab='Station',
ylab='Magnitude', main='Scatter Plot of Mag VS Station')
# question2-c
linear_reg = lm(mag~stations, data=earthquake)
# question2-c
linear_reg = lm(quake$mag~quake$stations)
# question2-c
linear_reg = lm(quakes$mag~quakes$stations)
linear_reg$coefficients
abline(linear_reg, lwd=2, col='skyblue')
abline(linear_reg, lwd=3, col='skyblue')
legend('bottomright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
legend('bottomright', legend=('Fitted Linear Curve'), col='skyblue', lwd=3, cex=0.75)
summary(linear_reg)
# question2-d
beta1 <- summary(linear_reg)$coeff
beta1
# question2-d
beta1 <- summary(linear_reg)$coeff[2,1]
beta1
summary(linear_reg)$coeff[2,1]
sd_beta1 <- summary(linear_reg)$coeff[2,2]
sd_beta1
lowerbd <- beta1 - pnorm(0.025) * sd_beta1
lowerbd
lowerbd <- beta1 + pnorm(0.025) * sd_beta1
lowerbd
qnorm(0.025)
lowerbd <- beta1 + pnorm(0.975) * sd_beta1
lowerbd
lowerbd <- beta1 - pnorm(0.975) * sd_beta1
lowerbd
summary(linear_reg)
beta1
sd_beta1
lowerbd <- beta1 - qnorm(0.975) * sd_beta1
lowerbd
upperbd <- beta1 + qnorm(0.975) * sd_beta1
upperbd
c(lowerbd, upperbd)
sum(sim_result >= 3.5 & sim_result <= 4.5)
sum(sim_result >= 3.5 & sim_result <= 4.5) / sim_size
pnorm(91, 77, 11.25)
pnorm(91, 76,11.25)
-2*log(0.2756)
log(0.2756)
# question 2-b
erupt_kde <- density(eruption_dt, bw=0.3)
# question 2-a
eruption_dt <- faithful$eruptions
# question 2-b
erupt_kde <- density(eruption_dt, bw=0.3)
hist(eruption_dt, breaks=20, probability=T)
lines(erupt_kde, lwd=3)
# question 2-c
erupt_kde <- density(eruption_dt, from=1, to=6, bw=0.3)
n <- length(eruption_dt)
B <- 10000
kde_bt <- matrix(NA, B, length(erupt_kde$x))
for (ii in 1:B) {
sp_index <- sample(n,n,replace=T)
sp_bt <- eruption_dt[sp_index]
sp_kde <- density(sp_bt, from=1, to=6, bw=0.3)
kde_bt[ii,] <- sp_kde$y
}
bt_sd <- sqrt(diag(var(kde_bt)))
plot(erupt_kde, lwd=3, col="blue", ylim=c(0,0.6),main="95% CI of KDE Function")
lines(x=erupt_kde$x,y=erupt_kde$y+qnorm(0.975)*bt_sd, lwd=3, col="dodgerblue",
lty=2)
lines(x=erupt_kde$x,y=erupt_kde$y-qnorm(0.975)*bt_sd, lwd=3, col="dodgerblue",
lty=2)
# question 3-a
library(smoothmestx)
install.packages(smoothmestx)
install.packages('smoothmest'')
)
.quit
')'
install.packages('smoothmest')
dexp_dt <- rdoublex(n,mu=0,lambda=1)
n=1000
dexp_dt <- rdoublex(n,mu=0,lambda=1)
# question 3-a
library(smoothmestx)
n=1000
# question 3-a
library(smoothmest)
n=1000
dexp_dt <- rdoublex(n,mu=0,lambda=1)
hist(dexp_dt)
dexp_den <- density(dexp_dt, bw=0.2, from=-6, to=6)
length(dexp_den$x)
x_base <- dexp_den$x
true_dexp <- ddoublex(x_base, mu=0, lambda=1)
dexp_true <- ddoublex(x_base, mu=0, lambda=1)
plot(x=x_base, y=dexp_den$y)
lines(x=x_base, y=dexp_true)
plot(x=x_base, y=dexp_den$y, type='l')
lines(x=x_base, y=dexp_true)
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='coral1')
lines(x=x_base, y=dexp_true, lwd=3, col-'skyblue')
lines(x=x_base, y=dexp_true, lwd=3, col='skyblue')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='skyblue')
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='coral1')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='skyblue')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue', xlim=c(-6,6),
ylim=c(0, 0.6), xlab='X', ylab='Density', main='KDE of 1000 R.N from Double Exponential')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue', xlim=c(-6,6),
ylim=c(0, 0.5), xlab='X', ylab='Density', main='KDE of 1000 R.N from Double Exponential')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
legend('topright', legend=c('KDE', 'True'), col=c('skybluye', 'coral1'), lty=c(1,2))
legend('topright', legend=c('KDE', 'True'), col=c('skyblue', 'coral1'), lty=c(1,2))
legend('topright', legend=c('KDE', 'True'), col=c('skyblue', 'coral1'),
lty=c(1,2), lwd=3, cex=0.8)
legend('topright', legend=c('KDE', 'True'), col=c('skyblue', 'coral1'),
lty=c(1,2), lwd=2, cex=0.8)
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue', xlim=c(-6,6),
ylim=c(0, 0.5), xlab='X', ylab='Density', main='KDE of 1000 R.N from Double Exponential')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
legend('topright', legend=c('KDE h=0.2', 'True'), col=c('skyblue', 'coral1'),
lty=c(1,2), lwd=2, cex=0.8)
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue', xlim=c(-6,6),
ylim=c(0, 0.5), xlab='X', ylab='Density', main='KDE of 1000 R.N from Double Exponential')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
legend('topright', legend=c('KDE h=0.2', 'dexp lambda=1'), col=c('skyblue', 'coral1'),
lty=c(1,2), lwd=2, cex=0.8)
N = 10000
bwds <- seq(0.05, 0.5, 0.05)
mise_result <- rep(NA, length(bwds))
for (ii in 1:length(bwds)) {
bwd <- bwds[ii]
kde_result <- matrix(NA, nrow=N, ncol=n)
for (jj in 1:N) {
temp_den <- density(dexp_dt, from=-6, to=6, n=n, bw=bwd)
kde_result[jj,] <- temp_den$y
}
mse_result <- colSums((t(t(kde_result) - dexp_true))^2) /N
mise_result[ii] <- sum(mse_result)
}
mise_result
?seq
seq(1,2,n=100)
dexp_den <- density(dexp_dt, bw=0.2, from=-6, n=1000, to=6)
x_base <- dexp_den$x
dexp_true <- ddoublex(x_base, mu=0, lambda=1)
dexp_den <- density(dexp_dt, bw=0.2, from=-6, n=n, to=6)
x_base <- dexp_den$x
length(x_base)
# question 3-c
N = 10000
bwds <- seq(0.05, 0.5, 0.05)
mise_result <- rep(NA, length(bwds))
for (ii in 1:length(bwds)) {
bwd <- bwds[ii]
kde_result <- matrix(NA, nrow=N, ncol=n)
for (jj in 1:N) {
temp_den <- density(dexp_dt, from=-6, to=6, n=n, bw=bwd)
kde_result[jj,] <- temp_den$y
}
mse_result <- colSums((t(t(kde_result) - dexp_true))^2) /N
mise_result[ii] <- sum(mse_result)
}
mise_result
plot(dexp_true)
plot(mise_result)
plot(x=bwds, y=mise_result, pch=16)
plot(x=bwds, y=mise_result, pch=16, xlab='Bandwidth', ylab='MISE',
main='Bandwidth vs MISE', col='coral1')
lines(x=bwds, y=mise_result, lwd=2, col='skyblue')
lines(x=bwds, y=mise_result, lwd=3, col='skyblue')
lines(x=bwds, y=mise_result, lwd=2, col='skyblue')
plot(x=bwds, y=mise_result, pch=16, xlab='Bandwidth', ylab='MISE',
main='Bandwidth vs MISE', col='coral1')
lines(x=bwds, y=mise_result, lwd=2, col='skyblue')
bwds[which.min(mise_result)]
opt_bwd <- bwds[which.min(mise_result)]
opt_bwd
p1 <- 45/80
p2 <- 26/75
p1 - p2
n <- 80
m <- 75
p1 <- 45/80
p2 <- 26/75
p1 - p2
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
z
cle <- normal_test(45, 80, 26, 75)
normal_test <- function(x, nx, y, my) {
n <- nx
m <- ny
p1 <- x/nx
p2 <- y/ny
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
}
cle <- normal_test(45, 80, 26, 75)
normal_test <- function(x, nx, y, my) {
n <- nx
m <- my
p1 <- x/nx
p2 <- y/ny
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
}
cle <- normal_test(45, 80, 26, 75)
normal_test <- function(x, nx, y, my) {
n <- nx
m <- my
p1 <- x/nx
p2 <- y/my
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
}
cle <- normal_test(45, 80, 26, 75)
qnorm(cle)
cle
return(z)
normal_test <- function(x, nx, y, my) {
n <- nx
m <- my
p1 <- x/nx
p2 <- y/my
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
return(z)
}
cle <- normal_test(45, 80, 26, 75)
pnorm(cle)
1 - pnorm(cle)
dim <- normal_test(45, 80, 52, 85)
pen <- normal_test(45, 80, 35, 67)
ptn150 <- normal_test(45, 80, 37, 85)
1 - pnorm(dim)
pnorm(dim)
1 - pnorm(pen100)
pen100 <- normal_test(45, 80, 35, 67)
1 - pnorm(pen100)
1 - pnorm(pen150)
ptn150 <- normal_test(45, 80, 37, 85)
1 - pnorm(pen150)
pen150 <- normal_test(45, 80, 37, 85)
1 - pnorm(pen150)
(1 - pnorm(cle)) * 2
pnorm(dim)
(1 - pnorm(pen100)) * 2
(1 - pnorm(pen150)) * 2
cle_p <- (1 - pnorm(cle)) * 2
dim <- normal_test(45, 80, 52, 85)
dim_p <- pnorm(dim) * 2
pen100 <- normal_test(45, 80, 35, 67)
pen100_p <- (1 - pnorm(pen100)) * 2
pen150 <- normal_test(45, 80, 37, 85)
pen150_p <- (1 - pnorm(pen150)) * 2
cle_bf <- cle_p * 4
cle_b <- cle_p * 4
pen150_b <- pen150_p * 2
dim_b <- dim_p * 3/4
dim_b
cle_b
cle_b <- cle_p * 4
cle_b
cle_p
n <- length(cal_dt)
setwd('/Users/nantang/Google Drive/STAT 342/HW/HW7')
# problem 1-a
prob1_dt <- read.table('problem1.txt', header=T)
cal_dt <- prob1_dt$calcium
n <- length(cal_dt)
cal_resid <- (cal_dt- mean(cal_dt)) / (500 * sqrt(1 - 1/n))
plot(cal_resid, ylim=c(-4, 4), ylab='Residual', main='Calcium Residual Plot')
abline(h=0)
# problem 1-b
qqnorm(cal_resid)
abline(a=0, b=1)
