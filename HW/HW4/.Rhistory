exp50
exp50 <- pexp(x_value)
col_ramp = colorRampPalette(c('limegreen','yellow', "orange"))
hist(minunif_eva, breaks=50, col=col_ramp(50))
lines(x=x_value, y=exp50)
exp50
exp50 <- pexp(x_value, 50)
exp50
hist(minunif_eva, breaks=50, col=col_ramp(50))
lines(x=x_value, y=exp50)
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3)
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
x_value <- seq(from=0, to=max(minunif_eva), by=0.001)
exp50 <- pexp(x_value, 50) * 100 # to percentage
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3)
exp50 <- dexp(x_value, 50) * 100 # to percentage
col_ramp = colorRampPalette(c('limegreen','yellow', "orange"))
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3)
x_value
plot(x_value, exp50)
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3)
par(yaxs="i",las=1)
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3)
exp50 <- dexp(x_value, 50) * 10# to percentage
col_ramp = colorRampPalette(c('limegreen','yellow', "orange"))
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3)
exp50 <- dexp(x_value, 50)# to percentage
col_ramp = colorRampPalette(c('limegreen','yellow', "orange"))
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3)
lines(x=x_value, y=exp50, lwd=3, col='skyblue')
lines(x=x_value, y=exp50, lwd=3, col='orange')
col_ramp = colorRampPalette(c('skyblue','limegreen', "orange"))
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3, col='orange')
lines(x=x_value, y=exp50, lwd=3, col='purple')
legend(1, 95, legend='Exp(50)',
col='skyblue', lty=1:2, cex=0.8)
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3, col='purple')
legend(1, 95, legend='Exp(50)',
col='skyblue', lty=1:2, cex=0.8)
legend('topright', legend='Exp(50)',
col='skyblue', lty=1:2, cex=0.8)
legend('topright', legend='Exp(50)',
col='skyblue', lty=1:1, cex=1.5)
legend('topright', legend='Exp(50)',
col='skyblue', lty=1:1, cex=1)
grid(nx=NA,ny=NULL,lty=1,lwd=1,col="gray")
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('topright', legend='Exp(50)',
col='skyblue', lty=1:1, cex=1)
legend('topright', legend='Exp(50)',
col='purple', lty=1:1, cex=0.8)
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('topright', legend='Exp(50)',
col='purple', lty=1:1, cex=0.8)
legend('topright', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('topright', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
legend('topright', legend='Exp(50)',
col='purple', lty=2:1, cex=0.8)
legend('topright', legend='Exp(50)',
col='purple', lty=1:3, cex=0.8)
legend('topright', legend='Exp(50)',
col='purple', lty=1:6, cex=0.8)
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T)
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
plot(x=size_power_comp$size, y=size_power_comp$power, col=col_ramp(nrow(size_power_comp)),
pch=20, cex=2, xlim=c(10, 100), main='Size-Power Plot (test size 0.1)',
ylab='Power of t-test', xlab='Sample Size')
lines(x=size_power_comp$size, y=size_power_comp$power, lwd=3, col="skyblue")
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
hist(minunif_eva, breaks=50, col=col_ramp(50), probability=T,
main='Histogram of M50 with Exponential(50)')
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
hist(minunif_eva, breaks=50, col='skyblue', probability=T,
main='Histogram of M50 with Exponential(50)')
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
sample_size <- 100
minunif_eva <- rep(NA, sim_size)
x_value <- seq(from=0, to=max(minunif_eva), by=0.001)
exp50 <- dexp(x_value, 100)
hist(minunif_eva, breaks=50, col='skyblue', probability=T,
main='Histogram of M50 with Exponential(50)')
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
hist(minunif_eva, breaks=50, col='skyblue', probability=T,
main='Histogram of M50 with Exponential(50)')
sample_size <- 100
minunif_eva <- rep(NA, sim_size)
for (i in 1:sim_size) {
sample <- runif(sample_size)
minunif_eva[i] <- min(sample)
}
x_value <- seq(from=0, to=max(minunif_eva), by=0.001)
exp50 <- dexp(x_value, 100)
hist(minunif_eva, breaks=50, col='skyblue', probability=T,
main='Histogram of M50 with Exponential(50)')
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
hist(minunif_eva, breaks=50, col='limegreen', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='orange', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='orange2', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='orange20', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='orange4', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='orange1', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='#a1d76a', probability=T,
main='Histogram of M100 with Exponential(100)')
hist(minunif_eva, breaks=50, col='#a1d76a', probability=T,
main='Histogram of M100 with Exponential(100)')
lines(x=x_value, y=exp50, lwd=3, col='#e9a3c9')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(100)',
col='#e9a3c9', lty=1:2, cex=0.8)
hist(minunif_eva, breaks=50, col='#b2df8a', probability=T,
main='Histogram of M100 with Exponential(100)')
lines(x=x_value, y=exp50, lwd=3, col='#1f78b4')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(100)',
col='#e9a3c9', lty=1:2, cex=0.8)
im_size <- 10000
sample_size <- 50
minunif_eva <- rep(NA, sim_size)
for (i in 1:sim_size) {
sample <- runif(sample_size)
minunif_eva[i] <- min(sample)
}
mean(minunif_eva)
sd(minunif_eva)
# question 2 b
x_value <- seq(from=0, to=max(minunif_eva), by=0.001)
exp50 <- dexp(x_value, 50)
hist(minunif_eva, breaks=50, col='skyblue', probability=T,
main='Histogram of M50 with Exponential(50)', xlab='M50')
lines(x=x_value, y=exp50, lwd=3, col='purple')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(50)',
col='purple', lty=1:2, cex=0.8)
sample_size <- 100
minunif_eva <- rep(NA, sim_size)
for (i in 1:sim_size) {
sample <- runif(sample_size)
minunif_eva[i] <- min(sample)
}
x_value <- seq(from=0, to=max(minunif_eva), by=0.001)
exp50 <- dexp(x_value, 100)
hist(minunif_eva, breaks=50, col='#b2df8a', probability=T,
main='Histogram of M100 with Exponential(100)', xlab='M100')
lines(x=x_value, y=exp50, lwd=3, col='#1f78b4')
grid(nx=NA,ny=NULL,lty=1,lwd=0.5,col="gray")
legend('right', legend='Exp(100)',
col='#1f78b4', lty=1:2, cex=0.8)
4/1000
4/100
sqrt(0.04/100)
qnorm(0.95)
po4_dt <- rpois(100, 4)
hist(po4_dt, break=30)
hist(po4_dt, breaks=30)
hist(po4_dt, breaks=20)
hist(po4_dt)
hist(po4_dt, break=15)
hist(po4_dt, breaks=15)
hist(po4_dt, breaks=20)
hist(po4_dt, main='Histogram of Poisson(4)', Probability=T, xlab='X Value', ylab='Density')
hist(po4_dt, main='Histogram of Poisson(4)', probability=T, xlab='X Value', ylab='Density')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density', col='orange')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density', col='limegreen')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density', col='lime')
hist(po4_dt, main='Histogram of Poisson(4)', probability = T, xlab='X Value',
ylab='Density', col='orange')
lambda_est <- mean(po4_dt)
lambda_est
sim_size <- 10000
sim_result <- rep(NA, sim_size)
for (i in 1:sim_size) {
po_dt <- rpois(100, 4)
sim_result[i] <- mean(po_dt)
}
hist(sim_result, probability=T)
hist(sim_result, probability = T)
hist(sim_result, probability = T, breaks=30)
hist(sim_result, probability = T, breaks=30, col='skyblue')
hist(sim_result, probability = T, breaks=30, col='violent')
hist(sim_result, probability = T, breaks=30, col='violet')
hist(sim_result, probability = T, breaks=30, col='limegreen')
hist(sim_result, probability = T, breaks=30, col='olivegreen')
hist(sim_result, probability = T, breaks=30, col='olive')
hist(sim_result, probability = T, breaks=30, col='oliver')
hist(sim_result, probability = T, breaks=30, col='olivergreen')
hist(sim_result, probability = T, breaks=30, col='darkolivegreen1',
main='Histogram of Monte Carlo Poisson(4)', xlab='MLE value', ylab='Density')
?seq
norm_base <- seq(3.0, 5.0, 0.01)
norm_dt <- dnorm(norm_base, 4, 4)
lines(norm_base, norm_dt)
norm_dt <- dnorm(norm_base, 4, 0.2)
lines(norm_base, norm_dt)
hist(sim_result, probability = T, breaks=30, col='darkolivegreen1',
main='Histogram of Monte Carlo Poisson(4)', xlab='MLE value', ylab='Density')
lines(norm_base, norm_dt, lwd=2, col='firebrick1')
lines(norm_base, norm_dt, lwd=2, col='deepskyblue')
-0.5/0.2
pnorm(2.5)
pnorm(2.5) - pnorm(-2.5)
pnorm(4.5, 4, 0.2) - pnorm(3.5, 4, 0.2)
data(quakes)
quakes
head(quakes)
# Q2-a
data(quakes)
hist(quakes$stations)
hist(quakes$stations, breaks=20, probability=T)
hist(quakes$stations, breaks15, probability=T)
hist(quakes$stations, breaks=15, probability=T)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='skyblue')
lambda_est <- mean(quakes$stations)
lambda_est
exp_dt <- dexp(exp_base, lambda_est)
exp_base <- seq(10, 140, 0.01)
exp_dt <- dexp(exp_base, lambda_est)
lines(exp_base, exp_dt)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='skyblue')
lines(exp_base, exp_dt)
head(exp_dt)
lambda_est <- 1/mean(quakes$stations)
lambda_est
exp_base <- seq(10, 140, 0.01)
exp_dt <- dexp(exp_base, lambda_est)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='skyblue')
lines(exp_base, exp_dt)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='coral1')
lines(exp_base, exp_dt, col='cornsilk1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='chartreuse')
lines(exp_base, exp_dt, col='cadetblue1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='brown1')
lines(exp_base, exp_dt, col='cadetblue1')
lines(exp_base, exp_dt, lwd=2, col='darkgoldenrod1')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='coral')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
?legend
legend(legend=('Exp(0.02992)'), col='cyan2')
legend('topleft', legend=('Exp(0.02992)'), col='cyan2')
legend('topright', legend=('Exp(0.02992)'), col='cyan2', lwd=2)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan4')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan3')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
lines(exp_base, exp_dt, lwd=2, col='chocolate2')
lines(exp_base, exp_dt, lwd=2, col='chocolate4')
lines(exp_base, exp_dt, lwd=2, col='chocolate3')
lines(exp_base, exp_dt, lwd=2, col='chocolate2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=2)
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3)
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
lines(exp_base, exp_dt, lwd=2, col='cadetblue1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cadetblue1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
# question2-c
plot(x=quakes$stations, y=quakes$mag)
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19)
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, col='gray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='darkgray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='#E69F00')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='56B4E9')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='#56B4E9')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50', xlab='Station',
ylab='Magnitude', main-'Scatter Plot of Mag VS Station')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50', xlab='Station',
ylab='Magnitude', main='Scatter Plot of Mag VS Station')
# question2-c
linear_reg = lm(mag~stations, data=earthquake)
# question2-c
linear_reg = lm(quake$mag~quake$stations)
# question2-c
linear_reg = lm(quakes$mag~quakes$stations)
linear_reg$coefficients
abline(linear_reg, lwd=2, col='skyblue')
abline(linear_reg, lwd=3, col='skyblue')
legend('bottomright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
legend('bottomright', legend=('Fitted Linear Curve'), col='skyblue', lwd=3, cex=0.75)
summary(linear_reg)
# question2-d
beta1 <- summary(linear_reg)$coeff
beta1
# question2-d
beta1 <- summary(linear_reg)$coeff[2,1]
beta1
summary(linear_reg)$coeff[2,1]
sd_beta1 <- summary(linear_reg)$coeff[2,2]
sd_beta1
lowerbd <- beta1 - pnorm(0.025) * sd_beta1
lowerbd
lowerbd <- beta1 + pnorm(0.025) * sd_beta1
lowerbd
qnorm(0.025)
lowerbd <- beta1 + pnorm(0.975) * sd_beta1
lowerbd
lowerbd <- beta1 - pnorm(0.975) * sd_beta1
lowerbd
summary(linear_reg)
beta1
sd_beta1
lowerbd <- beta1 - qnorm(0.975) * sd_beta1
lowerbd
upperbd <- beta1 + qnorm(0.975) * sd_beta1
upperbd
c(lowerbd, upperbd)
sum(sim_result >= 3.5 & sim_result <= 4.5)
sum(sim_result >= 3.5 & sim_result <= 4.5) / sim_size
pnorm(91, 77, 11.25)
pnorm(91, 76,11.25)
getwd
getwd()
setwd('/Users/nantang/Google Drive/STAT 342/HW/HW4')
# question 5
# a
baby_dt <- read.table('babiesl.data', header=T, sep='')
# question 5
# a
baby_dt <- read.table(babiesl.data, header=T, sep='')
getwd()
# question 5
# a
baby_dt <- read.table('babiesI.data', header=T, sep='')
head(baby_dt)
smoke_wt <- baby_dt[, baby_dt$smoke=1]
smoke_wt <- baby_dt[, baby_dt$smoke==1]
smoke_wt <- baby_dt[baby_dt$smoke==1]
smoke_wt <- baby_dt[baby_dt$smoke==1,]
smoke_wt
length(baby_dt)
nrow(baby_dt)
smoke_wt <- subset(baby_dt, baby_dt$smoke==1)
smoke_wt
# question 5
# a
baby_dt <- read.table('babiesI.data', header=T, sep='')
smoke_wt <- subset(baby_dt, baby_dt$smoke==1)
smoke_wt
baby_dt
smoke_wt <- baby_dt[baby_dt$smoke==1,]
smoke_wt
nrow(smoke_wt)
smoke_wt <- baby_dt[baby_dt$smoke==1,]
nrow(smoke_wt)
smoke_wt
header(smoke_wt)
head(smoke_wt)
summary(smoke_wt$bwt)
hist(smoke_wt$bwt)
hist(smoke_wt$bwt, breaks=20)
hist(smoke_wt$bwt, breaks=15)
hist(smoke_wt$bwt, breaks=10)
hist(smoke_wt$bwt, probability-T, xlab'Baby Weight')
hist(smoke_wt$bwt, probability=T, xlab'Baby Weight')
hist(smoke_wt$bwt, probability=T, xlab='Baby Weight')
abline(v=88, lty=3, lwd=3)
legend('topright', legend='Low weight boundry', lty=3, lwd=3, cex=0.75)
hist(smoke_wt$bwt, probability=T, xlab='Baby Weight',
main='Histogram of Smoker Baby\'s Weight')
abline(v=88, lty=3, lwd=3)
legend('topright', legend='Low weight boundry', lty=3, lwd=3, cex=0.75)
summary(smoke_wt$bwt)
sd(smoke_wt$bwt)
# b
low_wt_rt <- length(smoke_wt[baby_dt$bwt<88,])
low_wt_rt
# b
low_wt_rt <- nrow(smoke_wt[baby_dt$bwt<88,]) / nrow(smoke_wt)
low_wt_rt
# b
low_wt_rt <- nrow(smoke_wt[baby_dt$bwt<88,])
low_wt_rt
# b
low_wt_rt <- nrow(smoke_wt[baby_dt$bwt<88,]) / nrow(smoke_wt)
low_wt_rt
nrow(smoke_wt[baby_dt$bwt<88,]) / nrow(smoke_wt)
nrow(smoke_wt)
0.03*484
0.03*0.97*484
58 - 14..52
(58 - 14.52)/sqrt(14.08)
pnorm(11.587)
pnorm(11.587)-1
pnorm(11.587)-1.0
x <- pnorm(11.59)
x
binom.test(58, 484, 0.03)
summary(binom.test(58, 484, 0.03))
summary(binom.test(58, 484, 0.03)$coefficients)
summary(binom.test(58, 484, 0.03)$coefficient)
binom.test(58, 484, 0.03)$p_value
binom.test(58, 484, 0.03)$p.value
binom.test(58, 484, 0.03)
binom.test(58, 484, 0.03)$p.value
484-58
pbeta(0.03, 58, 426)
pbeta(0.03, 58, 426) - pbeta(0, 58, 426)
?pbeta
smoke_wt[which(smoke_wt$bwt < 88)]
smoke_wt[which(smoke_wt$bwt < 88),]
nrow(smoke_wt[which(smoke_wt$bwt < 88),])
1 - qnorm((36-14.5)/sqrt(14))
(36-14.5)/sqrt(14)
qnorm(5.746117)
pnorm(5.746117)
binom.test(36, 484, 0.03)
binom.test(36:484, 484, 0.03)
x <- seq(36, 484)
binom.test(x, 484, 0.03)
pbeta(0.03, 37, 449)
